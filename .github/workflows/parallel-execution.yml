name: Azure Spring App Management

on:
  workflow_dispatch:
    inputs:
      action:
        type: choice
        description: 'Manage Spring App (start, stop, restart)'
        required: true
        options:
          - start
          - stop
          - restart
      app_name:
        type: string
        description: 'Name of the Azure Spring App (Use "ALL" for all apps, or comma-separated list for multiple apps)'
        required: true

jobs:
  prepare-app-list:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Generate apps list
        id: generate-matrix
        run: |
          echo "Generating matrix..."
          if [ "${{ github.event.inputs.app_name }}" == "ALL" ]; then
            app_names=$(az spring app list --service "your-service-name" --resource-group "your-resource-group" --query "[].name" -o tsv)
          else
            IFS=',' read -r -a app_name_array <<< "${{ github.event.inputs.app_name }}"
            app_names="${app_name_array[*]}"
          fi
          json_array="["
          for app_name in $app_names; do
            json_array+="{\"app_name\":\"$app_name\", \"action\":\"${{ github.event.inputs.action }}\"},"
          done
          json_array="${json_array%?}]" # Remove the last comma and close the array
          echo "${json_array}" > matrix_payload.json

  manage-spring-app:
    needs: prepare-app-list
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        json: ${{fromJson(needs.prepare-app-list.outputs.matrix)}}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Azure CLI
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Execute action on app
        run: |
          app_name=$(echo "${{ matrix.json }}" | jq -r ".app_name")
          action=$(echo "${{ matrix.json }}" | jq -r ".action")
          echo "Executing $action action on $app_name"
          # Insert the commands to start/stop/restart the Azure Spring app based on $app_name and $action here

      - name: Check for errors
        run: |
          # Optional: Insert any commands needed to check for errors after the action has been executed
